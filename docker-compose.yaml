version: "3.3"

services:

  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.email=hey@benro.dev"
      - "--certificatesresolvers.le.acme.storage=/acme.json"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/acme.json:/acme.json"

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  sorobix-api-rs:
    image: "sorobix-api-rs:latest"
    container_name: "sorobix-api-rs"
    environment:
      - REDIS=redis:6379
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.whoami.rule=Host(`backend.sorobix.xyz`) && PathPrefix(`/api`)
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=le"
    depends_on:
      - redis

  sorobix-formatter:
     image: "wasm-handler:latest"
     container_name: "wasm-handler"
     environment:
      - WS_PORT=3001
      - REDIS_HOST=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - REDIS_KEY_LIFETIME=1h
     labels:
      - "traefik.enable=true"
      - traefik.http.routers.formatter.rule=Host(`backend.sorobix.xyz`) && PathPrefix(`/ws`)
      - "traefik.http.routers.formatter.entrypoints=websecure"
      - "traefik.http.routers.formatter.tls=true"
      - "traefik.http.routers.formatter.tls.certresolver=le"
     depends_on:
      - redis
